# name: CI/CD Development Environment
# on:
#   push:
#     branches:
#       - feature/*
#       - main
#     tags:
#       - v*.*.*

# jobs:
#   development:
#     uses: vinay-20/reusable_workflows/.github/workflows/deployment-orchestrator.yaml@main
#     secrets: inherit
#     with:
#       environment: "dev"
  
#   staging:
#     uses: vinay-20/reusable_workflows/.github/workflows/deployment-orchestrator.yaml@main
#     secrets: inherit
#     with:
#       environment: "stage"

#   production:
#     uses: vinay-20/reusable_workflows/.github/workflows/deployment-orchestrator.yaml@main
#     secrets: inherit
#     with:
#       environment: "prod"

#   # kubernetes_deployment:
#   #   uses: vinay-20/reusable_workflows/.github/platforma-workflows/k8s_deploy.yaml@${{ needs.fetch_github_action_versions.outputs.k8s_deploy_version }}
#   #   needs: 
#   #     - build-container-image
#   #   secrets:
#   #     aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
#   #     aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
#   #   with:
#   #     # limitation of github (https://docs.github.com/en/actions/using-workflows/reusing-workflows#limitations)
#   #     # Cannot propogate environment variables to different workflows, hence aws_region needs hard coding.
#   #     aws_region: "us-west-2" 
#   #     service_name: ${{ github.event.repository.name }}
#   #     namespace: "development"
#   #     cluster_name: "dev-registry"

name: build
on: push
jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      run: echo "matrix={\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}],\"another\":[{\"project\":\"foo1\",\"config\":\"Debug1\"},{\"project\":\"bar1\",\"config\":\"Release1\"}]}" >> $GITHUB_OUTPUT
  job2:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.job1.outputs.matrix)}}
    steps:
    - run: echo ${{ matrix.include }}
    - run: echo ${{ matrix.project }}
    - run: echo ${{ matrix.config }}